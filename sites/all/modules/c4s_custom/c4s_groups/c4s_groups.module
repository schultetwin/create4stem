<?php

/**
 * Implements hook_block_info().
 */
function c4s_groups_block_info() {
  $blocks['create_group_content'] = array(
    'info' => t('Form to create content for a group'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function c4s_groups_block_view($delta = '') {
  switch ($delta) {
    case 'create_group_content':
      global $user;
      $group = og_context_determine_context();
      if ($group == FALSE) return;
      if (!og_is_member($group->gid, 'user', $user) && !user_access('administer groups')) return;
      $block['content'] = drupal_get_form('c4s_groups_add_content_form', $group);
      $block['subject'] = t('Add Content to Group');
      break;
  }
  return $block;
}

function c4s_groups_add_content_form($form, &$form_state, $group) {
  $options3 = node_type_get_types();
  foreach ($options3 as $key => $option) {
    if (og_is_group_content_type('node', $key)) {
      $options[$key] = $option->name;
    }
  }
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    $node = node_load($nid);
  }
  $form['#attached'] = array(
    'css' => array(
      'type' => 'file',
      'data' => drupal_get_path('module', 'c4s_groups') . '/c4s_groups.css',
    ),
  );
  $form['content_type'] = array(
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => isset($node) ? $node->type : ''
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'create',
  );
  return $form;
}

function c4s_groups_add_content_form_submit($form, &$form_state) {
  $type = $form_state['values']['content_type'];
  $group = array_pop($form_state['build_info']['args']);
  $form_state['redirect'] = array(
    'node/add/' . $type, array(
      'query' => array(
        'gids_group' => array($group->gid),
      ),
    ),
  );
}