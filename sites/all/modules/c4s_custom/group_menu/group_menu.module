<?php

/**
 * Implements hook_block_info().
 */
function group_menu_block_info() {
  $blocks = array();

  $blocks['group_menu'] = array(
    'info' => t('Localized Menu for Group'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function group_menu_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'group_menu':
      $og_context = og_context();
      if ($og_context) {
        $block['subject'] = t("Group Navigation");
        $block['content'] = group_menu_render_menu($og_context);
      }
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function group_menu_theme($existing, $type, $theme, $path) {
  return array(
    'group_menu' => array(
      'variables' => array('items' => array()),
    ),
  );
}

function theme_group_menu($variables) {
  global $user;
  $items = is_array($variables['items']) ? $variables['items'] : array();
  uasort($items, 'drupal_sort_weight');
  $links = array();
  foreach ($items as $item) {
    $link_info = $item['link'];
    $link = l($link_info['label'], $link_info['path'], $link_info['options']);
    $links[] = $link;
  }
  return theme('item_list', array('items' => $links));
}

function group_menu_get_menu($group, $reset = FALSE) {
  $links = &drupal_static(__FUNCTION__, array(), $reset);
  if (empty($links) || !isset($links[$group->gid])) {
    $links[$group->gid] = array();
    foreach (module_implements('og_group_menu') as $module) {
      $function = $module . "_og_group_menu";
      $module_links = $function($group);
      foreach ($module_links as &$module_link) {
        $module_link += array(
          'weight' => 0,
        );
        $module_link['link']['options'] = isset($module_link['link']['options']) && is_array($module_link['link']['options']) ? $module_link['link']['options'] : array();
        $module_link['link']['path'] = $module_link['link']['path'];
      }
      $links[$group->gid] = array_merge($links[$group->gid], $module_links);
    }
    drupal_alter('og_group_menu', $links, $group);
  }
  return $links[$group->gid];
}

function group_menu_build_menu($group) {
  $links = group_menu_get_menu($group);
  foreach ($links as $key => $link) {
    if (!url_is_external($link['link']['path']) && !drupal_valid_path($link['link']['path'])) {
      unset($links[$key]);
    }
  }
  return $links;
}

function group_menu_render_menu($group) {
  $links = group_menu_build_menu($group);
  return theme('group_menu', array('items' => $links));
}